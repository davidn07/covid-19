{"version":3,"sources":["api/index.js","comonents/Chart/Chart.js","comonents/Cards/Cards.js","comonents/CountryTable/CountryTable.js","comonents/Header/Header.js","App.js","index.js"],"names":["url","fetchDailyData","a","axios","get","cases_time_series","data","modifiedData","map","dailyData","confirmed","dailyconfirmed","deaths","dailydeceased","date","fetchData","statewise","fetchStateData","stateData","state","infected","active","recovered","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","xs","sm","md","lg","xl","Cards","globalData","setGlobalData","fetchedData","Meta","Card","className","gutter","hoverable","title","bordered","description","avatar","CaretRightFilled","style","fontWeight","color","headStyle","CountryTable","setStateData","Text","Typography","columns","dataIndex","align","render","text","dataSource","Header","Time","setTime","ghost","size","column","Item","lastupdatedtime","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33f00c4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://api.covid19india.org/data.json';\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try {\r\n        const { data: { cases_time_series }}= await axios.get(url)\r\n         \r\n        const modifiedData = cases_time_series.map((dailyData) => ({\r\n            confirmed: dailyData.dailyconfirmed,\r\n            deaths: dailyData.dailydeceased,\r\n            date: dailyData.date\r\n\r\n        }))\r\n\r\n        return modifiedData;\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchData = async () =>{\r\n\r\n    try {\r\n        const { data: { statewise } } = await axios.get(url)\r\n        \r\n        const modifiedData = statewise[0]\r\n        return modifiedData\r\n        \r\n    } catch (error) {\r\n        \r\n    }    \r\n}\r\n\r\nexport const fetchStateData = async () => {\r\n    try {\r\n        const { data : { statewise }} = await axios.get(url);\r\n\r\n        const modifiedData = statewise.map((stateData) => ({\r\n            state: stateData.state,\r\n            confirmed: stateData.confirmed,\r\n            infected: stateData.active,\r\n            deaths: stateData.deaths,\r\n            recovered: stateData.recovered,\r\n        }))\r\n\r\n        return modifiedData\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport styles from './chart.css'\r\n\r\nfunction Chart() {\r\n    const [ dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());          \r\n        }\r\n        fetchAPI();    \r\n    });    \r\n\r\n    const lineChart =(\r\n    dailyData.length !== 0 ?\r\n    (\r\n        <Line \r\n         data={{\r\n             labels: dailyData.map(({ date }) => date),\r\n             datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n\r\n             },{\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n                                 \r\n             }]\r\n         }}\r\n        />\r\n    ) \r\n    : null );\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n                \r\n                </Col>\r\n                <Col xs={20} sm={20} md={20} lg={20} xl={20}>\r\n                    {lineChart}\r\n                </Col>\r\n                <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n                \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchData } from '../../api';\r\nimport { Card, Col, Row } from 'antd';\r\nimport { CaretRightFilled } from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport style from './cards.css'\r\nimport CountUp from 'react-countup';\r\n\r\nfunction Cards() {\r\n    const [globalData, setGlobalData] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchedData = async () =>{\r\n            setGlobalData(await fetchData())\r\n        }\r\n        fetchedData()\r\n    })\r\n\r\n    \r\n    const { Meta } = Card;\r\n    return (\r\n        <div className=\"site-card-wrapper\">\r\n    <Row gutter={[16, 16]}>\r\n      <Col gutter={16} xs={20} sm={8}>\r\n        <Card hoverable title=\"Total Confirmed\" bordered={false} >\r\n        <Meta description={globalData.confirmed} avatar={<CaretRightFilled />} \r\n        style={{ fontWeight: 'bold', color: 'black'}}\r\n        />\r\n        </Card>\r\n      </Col>\r\n      <Col xs={20} sm={8}>\r\n        <Card hoverable title=\"Total Deaths\" bordered={false} headStyle={{ color: 'red'}}>\r\n        <Meta description={globalData.deaths} avatar={<CaretRightFilled />}\r\n        style={{ fontWeight: 'bold', color: 'red'}}\r\n        />\r\n        </Card>\r\n      </Col>\r\n      <Col xs={20} sm={8}>\r\n        <Card hoverable title=\"Total Recovered\" bordered={false} headStyle={{ color: 'green'}} >\r\n        <Meta description={globalData.recovered} avatar={<CaretRightFilled />}\r\n        style={{ fontWeight: 'bold', color: 'green'}}\r\n        />\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchStateData } from '../../api';\r\nimport { Input, Table, Typography } from 'antd';\r\n\r\nfunction CountryTable() {\r\n    const [stateData, setStateData] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchedData = async () =>{\r\n            setStateData(await fetchStateData())\r\n        }\r\n\r\n        \r\n                \r\n        fetchedData()\r\n    })\r\n\r\n    const { Text } = Typography;\r\n    const columns = [\r\n        {\r\n            title: 'State',\r\n            dataIndex: 'state',\r\n            align: 'center',\r\n            render: (text) => <Text style={{ fontWeight: 'bold'}}>{text}</Text>\r\n        },\r\n        {\r\n            title: 'Confirmed',\r\n            dataIndex: 'confirmed',\r\n            align: 'center',\r\n            render: (text) => <Text style={{ fontWeight: 'bold'}}>{text}</Text>\r\n        },\r\n        {\r\n            title: 'Infected',\r\n            dataIndex: 'infected',\r\n            align: 'center',\r\n            render: (text) => <Text style={{ color: 'blue', fontWeight: 'bold'}}>{text}</Text>\r\n        },\r\n        {\r\n            title: 'Deaths',\r\n            dataIndex: 'deaths',\r\n            align: 'center',\r\n                render: (text) => <Text style={{ color: 'red', fontWeight: 'bold'}}>{text}</Text>\r\n        },\r\n        {\r\n            title: 'Recovered',\r\n            dataIndex: 'recovered',\r\n            align: 'center',\r\n            render: (text) => <Text style={{ color: 'green', fontWeight: 'bold'}}>{text}</Text>\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n         <Table columns={columns} dataSource={stateData}/>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryTable\r\n","import React, {useEffect, useState}  from 'react';\r\nimport { fetchData } from '../../api';\r\nimport { PageHeader, Button, Descriptions } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport style from './header.css'\r\n\r\n\r\nfunction Header() {\r\n    const [Time, setTime] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchedData = async () =>{\r\n            setTime(await fetchData())\r\n        }\r\n        fetchedData()\r\n    })\r\n    return (\r\n        <div className=\"site-page-header-ghost-wrapper\">\r\n    <PageHeader\r\n      ghost={false}\r\n      \r\n      title=\"Covid-19 India Tracker\"\r\n      \r\n    >\r\n      <Descriptions size=\"small\" column={3}>\r\n        <Descriptions.Item label=\"Created By:\" >David Nirmal</Descriptions.Item>\r\n    <Descriptions.Item label=\"Last Updated\"><span style={{color: 'red', fontWeight: 'bold'}}>{Time.lastupdatedtime}</span></Descriptions.Item>\r\n      </Descriptions>\r\n    </PageHeader>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport Chart from './comonents/Chart/Chart';\nimport Cards from './comonents/Cards/Cards';\nimport CountryTable from './comonents/CountryTable/CountryTable';\nimport Header from './comonents/Header/Header';\nimport { Row, Col, Divider  } from 'antd';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Divider />\n      <Cards />\n    <Divider  />\n      <Chart />\n    <Divider  />\n      <CountryTable />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}